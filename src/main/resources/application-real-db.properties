
# spring.jpa.hibernate.ddl-auto=none
# API 호출시, SQL 문을 콘솔에 출력한다.
spring.jpa.show-sql=true
# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true
spring.session.jdbc.initialize-schema: always
# MySQL 을 사용할 것.
spring.jpa.database=mysql
# spring.h2.console.enabled=true


spring.datasource.url=jdbc:mysql://52.91.106.118:3306/GRAD2?useSSL=false&serverTimezone=UTC&autoReconnect=true
spring.datasource.username=ddori
spring.datasource.password=ddoriek7818
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.testOnBorrow=true
spring.datasource.validationQuery=SELECT 1
spring.datasource.continue-on-error=true

#spring.datasource.tomcat.initial-size=0
#spring.datasource.tomcat.max-active=50
#spring.datasource.tomcat.max-wait=10000
#spring.datasource.tomcat.max-idle=0
#spring.datasource.tomcat.min-idle=0
#spring.datasource.tomcat.remove-abandoned=true
#spring.datasource.tomcat.remove-abandoned-timeout=10000
#spring.datasource.tomcat.validation-interval=10000
#spring.datasource.tomcat.validation-query-timeout=10000
#spring.datasource.tomcat.validation-query=SELECT 1 FROM dual
#spring.datasource.tomcat.test-on-borrow=true
#spring.datasource.tomcat.test-on-connect=true
#spring.datasource.tomcat.test-on-return=true


출처: https://coding-start.tistory.com/158 [코딩스타트]
